TRY TO STAY FOCUSSED!

- use git
- use Typescript (for unittests too)
- do unittests (run automatically on save)
- use Sass (auto transpile)
- use Webkit to bundle everything
- use vscode
- configure all yourself
- compare with some template

DONE:
- update vscode
- disable eslint
- install/update tsc (npm install -g typescript //  npm -g update typescript)
- create tsconfig file (tsc - init)
- modify tsconfig (target es2015, enable sourcemaps, module=amd, set output file)
- write some ts code for testing, build ts (CTRL+SHIFT+B)
- create 2048 repo on github
- install git / restart vscode, select initialize repository (in vscode)
- configure your email and username for git:
   git config --global user.email "your@email.com"
   git config --global user.name "yourUserName"
- config remote git repos: git remote add origin https://github.com/NatureCoder/2048.git
- push to origin (from vscode)
- created tasks.json (Configure Default Build Task)
- cleaned up git history 
  (needed to remove remote origin before doing interactive rebase using SoureTree
   then readded the remote origin and pushed to github)
- added html and modified app.ts code
- moved app.ts into src folder
- added build task that copies index.html
- installed sass & live sass compiler extensions
- added sass file and configured settings of extension
- configured live server
- created package.json and installed mocha as dev dependency
- added a simple test and configures "run tests" task
- reverted back to common.js module type (needed for ts-node)
- added ts-node and configured mocha to use it 
- renamed output to dist
- added webpack as dev dependency
- added webpack.config.js
- renamed app.ts -> index.ts
- added ts-loader and typescript to dev dependencies and configured webpack to use them
- added style-loader, css-loader,  sass-loader & node-sass as dev dependencies and configured webpack to use them
- added scripts in package.json to run webpack (build) or webpack --watch (start)
- rewrote tasks in tasks.json to use scripts defined in package.json
- added html-webpack-plugin to dev dependencies and configured webpack to use it
- changed index.html to work as a template
- installed https://github.com/ragnarol/Awesome-Typescript-Problem-Matcher to use in tasks.json
- added file loader and use it for bundling images and fonts
- added clean-webpack-plugin and use it to clean the dist folder before builds
- added webpack-merge to merge common webpack settings into production & development config
- added uglifyjs-webpack-plugin to minify js and do tree shaking (in prod mode)
- added souremap-loader to support source maps of 3th party js libraries
- added ts-lint production mode
